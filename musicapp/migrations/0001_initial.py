# Generated by Django 5.2.6 on 2025-10-21 09:30

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist_name', models.CharField(max_length=20)),
                ('artist_kname', models.CharField(blank=True, max_length=20, null=True)),
                ('artist_group', models.CharField(blank=True, max_length=20, null=True)),
                ('artist_member', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_count', models.IntegerField(blank=True, null=True)),
                ('sampled_count', models.IntegerField(blank=True, null=True)),
                ('artist_uuid', models.UUIDField(blank=True, default=uuid.uuid4, unique=True)),
            ],
            options={
                'ordering': ['artist_name', 'artist_kname'],
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('album_title', models.CharField(max_length=50)),
                ('album_type', models.CharField(choices=[('album', '앨범'), ('ep', 'EP'), ('single', '싱글')], max_length=10)),
                ('album_release_date', models.DateField(default='2000.01.01')),
                ('album_sample_count', models.IntegerField(blank=True, null=True)),
                ('album_uuid', models.UUIDField(blank=True, default=uuid.uuid4, unique=True)),
                ('album_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='musicapp.artist')),
            ],
            options={
                'ordering': ['album_release_date'],
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('song_title', models.CharField(max_length=100)),
                ('song_producer', models.CharField(blank=True, max_length=50, null=True)),
                ('song_timestamp', models.CharField(blank=True, default='00:00', max_length=20)),
                ('song_link', models.CharField(blank=True, max_length=100, null=True)),
                ('sample_title', models.CharField(max_length=100)),
                ('sample_artist', models.CharField(max_length=20)),
                ('sample_album', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_producer', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_timestamp', models.CharField(blank=True, default='00:00', max_length=20)),
                ('sample_link', models.CharField(blank=True, max_length=100, null=True)),
                ('sample_contributor', models.CharField(blank=True, max_length=20, null=True)),
                ('song_uuid', models.UUIDField(blank=True, default=uuid.uuid4, unique=True)),
                ('song_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song_album', to='musicapp.album')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SongArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('main', '메인'), ('feat', '피처링'), ('prod', '프로듀서')], default='main', max_length=20)),
                ('order', models.IntegerField(choices=[('0', '메인'), ('1', '피처링'), ('2', '프로듀서')], default=0, help_text='Role에 따른 순서')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='musicapp.artist')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='musicapp.song')),
            ],
            options={
                'verbose_name': '곡 아티스트',
                'verbose_name_plural': '곡 아티스트',
                'ordering': ['order'],
                'unique_together': {('song', 'artist', 'role')},
            },
        ),
        migrations.AddField(
            model_name='song',
            name='song_artists',
            field=models.ManyToManyField(related_name='songs', through='musicapp.SongArtist', to='musicapp.artist'),
        ),
        migrations.CreateModel(
            name='SongSampleRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(choices=[('melody', 'Melody'), ('drum', 'Drum'), ('vocal', 'Vocal'), ('other', 'Other')], default='melody', help_text='샘플 유형', max_length=50)),
                ('original_song', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_song', to='musicapp.song')),
                ('sampling_song', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampling_song', to='musicapp.song')),
            ],
            options={
                'unique_together': {('original_song', 'sampling_song')},
            },
        ),
    ]
